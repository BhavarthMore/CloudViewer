{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const uploadFile = async () => {\n    if (!file) return;\n    try {\n      // Step 1: Get the presigned URL from the backend\n      const response = await axios.get('http://localhost:5000/generate-url');\n      const {\n        url,\n        filename\n      } = response.data;\n\n      // Step 2: Upload the file directly to S3 using the presigned URL\n      const result = await axios.put(url, file, {\n        headers: {\n          'Content-Type': file.type\n        }\n      });\n      console.log('File uploaded successfully:', result);\n      alert(`File uploaded: ${filename}`);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert(\"Error occurred!!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload File to S3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","handleFileChange","e","target","files","uploadFile","response","get","url","filename","data","result","put","headers","type","console","log","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload() {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const uploadFile = async () => {\r\n    if (!file) return;\r\n\r\n    try {\r\n      // Step 1: Get the presigned URL from the backend\r\n      const response = await axios.get('http://localhost:5000/generate-url');\r\n      const { url, filename } = response.data;\r\n\r\n      // Step 2: Upload the file directly to S3 using the presigned URL\r\n      const result = await axios.put(url, file, {\r\n        headers: {\r\n          'Content-Type': file.type,\r\n        },\r\n      });\r\n\r\n      console.log('File uploaded successfully:', result);\r\n      alert(`File uploaded: ${filename}`);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert(\"Error occurred!!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload File to S3</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={uploadFile}>Upload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACN,IAAI,EAAE;IAEX,IAAI;MACF;MACA,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,oCAAoC,CAAC;MACtE,MAAM;QAAEC,GAAG;QAAEC;MAAS,CAAC,GAAGH,QAAQ,CAACI,IAAI;;MAEvC;MACA,MAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAACJ,GAAG,EAAET,IAAI,EAAE;QACxCc,OAAO,EAAE;UACP,cAAc,EAAEd,IAAI,CAACe;QACvB;MACF,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEL,MAAM,CAAC;MAClDM,KAAK,CAAC,kBAAkBR,QAAQ,EAAE,CAAC;IACrC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CD,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3B,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACU,QAAQ,EAAEvB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD3B,OAAA;MAAQ6B,OAAO,EAAEpB,UAAW;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACzB,EAAA,CArCQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}