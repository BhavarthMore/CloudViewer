{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\ListFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fileCategories = {\n  documents: 'Documents',\n  image: 'Images',\n  video: 'Videos'\n};\nexport default function FileTypeDropdowns() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [allFiles, setAllFiles] = useState([]);\n  const [filteredFiles, setFilteredFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all files when component mounts\n  useEffect(() => {\n    const fetchAllFiles = async () => {\n      setLoading(true);\n      setError(null);\n      const email = localStorage.getItem('userEmail');\n      const prefix = `uploads/user-upload/${email}/`;\n      try {\n        const response = await fetch('http://localhost:5000/api/list-files', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            prefix\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setAllFiles(data.files);\n          setFilteredFiles(data.files); // Initialize with all files\n        } else {\n          setError('Failed to fetch files.');\n        }\n      } catch (err) {\n        setError('Error fetching files.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllFiles();\n  }, []); // Empty dependency array to run once on mount\n\n  // Filter files based on selected category\n  useEffect(() => {\n    if (selectedCategory) {\n      const filtered = allFiles.filter(file => file.Key.includes(`/${fileCategories[selectedCategory]}/`));\n      setFilteredFiles(filtered);\n    } else {\n      // Show all files if no category selected\n      setFilteredFiles(allFiles);\n    }\n  }, [selectedCategory, allFiles]);\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 mt-3\",\n      style: {\n        margin: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        className: \"form-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), Object.keys(fileCategories).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: fileCategories[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredFiles.length > 0 ? filteredFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://your-bucket-name.s3.amazonaws.com/${file.Key}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.Key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" (\", file.Size, \" bytes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" (\", file.ContentT, \" bytes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(FileTypeDropdowns, \"ZA5j93lDyJtUoHQBf5mX5bygpnw=\");\n_c = FileTypeDropdowns;\nvar _c;\n$RefreshReg$(_c, \"FileTypeDropdowns\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fileCategories","documents","image","video","FileTypeDropdowns","_s","selectedCategory","setSelectedCategory","allFiles","setAllFiles","filteredFiles","setFilteredFiles","loading","setLoading","error","setError","fetchAllFiles","email","localStorage","getItem","prefix","response","fetch","method","headers","body","JSON","stringify","data","json","success","files","err","filtered","filter","file","Key","includes","handleCategoryChange","event","target","value","children","className","style","margin","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","length","index","href","rel","Size","ContentT","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/ListFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst fileCategories = {\r\n  documents: 'Documents',\r\n  image: 'Images',\r\n  video: 'Videos',\r\n};\r\n\r\nexport default function FileTypeDropdowns() {\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [allFiles, setAllFiles] = useState([]);\r\n  const [filteredFiles, setFilteredFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch all files when component mounts\r\n  useEffect(() => {\r\n    const fetchAllFiles = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const email = localStorage.getItem('userEmail');\r\n      const prefix = `uploads/user-upload/${email}/`;\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/list-files', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, prefix }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setAllFiles(data.files);\r\n          setFilteredFiles(data.files); // Initialize with all files\r\n        } else {\r\n          setError('Failed to fetch files.');\r\n        }\r\n      } catch (err) {\r\n        setError('Error fetching files.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllFiles();\r\n  }, []); // Empty dependency array to run once on mount\r\n\r\n  // Filter files based on selected category\r\n  useEffect(() => {\r\n    if (selectedCategory) {\r\n      const filtered = allFiles.filter(file =>\r\n        file.Key.includes(`/${fileCategories[selectedCategory]}/`)\r\n      );\r\n      setFilteredFiles(filtered);\r\n    } else {\r\n      // Show all files if no category selected\r\n      setFilteredFiles(allFiles);\r\n    }\r\n  }, [selectedCategory, allFiles]);\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setSelectedCategory(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3 mt-3\" style={{ margin: \"15px\" }}>\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={handleCategoryChange}\r\n          className=\"form-select\"\r\n        >\r\n          <option value=\"\">Select a category</option>\r\n          {Object.keys(fileCategories).map(key => (\r\n            <option key={key} value={key}>{fileCategories[key]}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <ul>\r\n        {filteredFiles.length > 0 ? (\r\n          filteredFiles.map((file, index) => (\r\n            <li key={index}>\r\n              <a href={`https://your-bucket-name.s3.amazonaws.com/${file.Key}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.Key}\r\n              </a>\r\n              <span> ({file.Size} bytes)</span>\r\n              <span> ({file.ContentT} bytes)</span>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No files found.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}   "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}