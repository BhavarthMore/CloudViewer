{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\ListFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileList = () => {\n  _s();\n  const [fileGroups, setFileGroups] = useState({});\n  const location = useLocation();\n  const userMail = localStorage.getItem(\"email\") || \"\"; // Retrieve email correctly\n\n  useEffect(() => {\n    if (!userMail) {\n      console.error('User email not found');\n      return;\n    }\n    const fetchFileGroups = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/filelist', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userMail\n          }) // Send userMail for fetching file list\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setFileGroups(data);\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    };\n    fetchFileGroups();\n  }, [userMail]); // Only re-run the effect if userMail changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(fileGroups).length > 0 ? Object.keys(fileGroups).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: category.charAt(0).toUpperCase() + category.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: fileGroups[category].map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: file.Key,\n          children: file.Key\n        }, file.Key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No files available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(FileList, \"O158rwnsFcCkL8TSASxvYTZYIZ4=\", false, function () {\n  return [useLocation];\n});\n_c = FileList;\nexport default FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","FileList","_s","fileGroups","setFileGroups","location","userMail","localStorage","getItem","console","error","fetchFileGroups","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","children","Object","keys","length","map","category","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","file","value","Key","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/ListFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst FileList = () => {\r\n    const [fileGroups, setFileGroups] = useState({});\r\n    const location = useLocation();\r\n    const userMail = localStorage.getItem(\"email\") || \"\"; // Retrieve email correctly\r\n\r\n    useEffect(() => {\r\n        if (!userMail) {\r\n            console.error('User email not found');\r\n            return;\r\n        }\r\n\r\n        const fetchFileGroups = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/filelist', {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({ userMail }), // Send userMail for fetching file list\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setFileGroups(data);\r\n            } catch (error) {\r\n                console.error('Error fetching files:', error);\r\n            }\r\n        };\r\n\r\n        fetchFileGroups();\r\n    }, [userMail]); // Only re-run the effect if userMail changes\r\n\r\n    return (\r\n        <div>\r\n            {Object.keys(fileGroups).length > 0 ? (\r\n                Object.keys(fileGroups).map(category => (\r\n                    <div key={category}>\r\n                        <h3>{category.charAt(0).toUpperCase() + category.slice(1)}</h3>\r\n                        <select>\r\n                            {fileGroups[category].map(file => (\r\n                                <option key={file.Key} value={file.Key}>\r\n                                    {file.Key}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No files available</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}