{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\ListFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyUploads() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch files when the component mounts\n  useEffect(() => {\n    const fetchFiles = async () => {\n      setLoading(true);\n      setError(null);\n      const email = localStorage.getItem('userEmail');\n      console.log('Fetching files for email:', email); // Print the email before posting\n\n      try {\n        const response = await fetch('http://localhost:5000/api/list-files', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setFiles(data.files);\n        } else {\n          setError('Failed to fetch files.');\n        }\n      } catch (err) {\n        setError('Error fetching files.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFiles();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.length > 0 ? files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://your-bucket-name.s3.amazonaws.com/${file.Key}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.Key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" (\", file.Size, \" bytes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" (\", file.type, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(MyUploads, \"9wXoI5dGhvtXh/BJkisHxu5JZ6o=\");\n_c = MyUploads;\nvar _c;\n$RefreshReg$(_c, \"MyUploads\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyUploads","_s","files","setFiles","loading","setLoading","error","setError","fetchFiles","email","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","success","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","file","index","href","Key","target","rel","Size","type","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/ListFile.js"],"sourcesContent":["    import React, { useState, useEffect } from 'react';\r\n\r\n    export default function MyUploads() {\r\n    const [files, setFiles] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch files when the component mounts\r\n    useEffect(() => {\r\n        const fetchFiles = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const email = localStorage.getItem('userEmail');\r\n        console.log('Fetching files for email:', email); // Print the email before posting\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/list-files', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.success) {\r\n            setFiles(data.files);\r\n            } else {\r\n            setError('Failed to fetch files.');\r\n            }\r\n        } catch (err) {\r\n            setError('Error fetching files.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n        };\r\n\r\n        fetchFiles();\r\n    }, []); // Empty dependency array means this effect runs once when the component mounts\r\n\r\n    return (\r\n        <div>\r\n        {loading && <p>Loading...</p>}\r\n        {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n        <ul>\r\n            {files.length > 0 ? (\r\n            files.map((file, index) => (\r\n                <li key={index}>\r\n                <a href={`https://your-bucket-name.s3.amazonaws.com/${file.Key}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {file.Key}\r\n                </a>\r\n                <span> ({file.Size} bytes)</span>\r\n                <span> ({file.type})</span>\r\n                </li>\r\n            ))\r\n            ) : (\r\n            <p>No files found.</p>\r\n            )}\r\n        </ul>\r\n        </div>\r\n    );\r\n    }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}