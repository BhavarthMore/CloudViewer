{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload({\n  userMail\n}) {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const location = useLocation();\n\n  // Destructure the data from the location's state\n\n  const handleFileChange = e => {\n    setFiles(Array.from(e.target.files));\n  };\n  const uploadFile = async () => {\n    if (files.length === 0) {\n      alert(\"No files selected\");\n      return;\n    }\n    setUploadStatus(`Uploading on ${userMail}...`);\n    try {\n      for (const file of files) {\n        // Step 1: Get the presigned URL from the backend\n        const response = await fetch('http://localhost:5000/api/generate-url', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userMail: userMail,\n            filename: file.name,\n            contentType: file.type\n          }) // Send filename and contentType\n        });\n        const data = await response.json();\n        const {\n          url,\n          filename\n        } = data;\n\n        // Step 2: Upload the file directly to S3 using the presigned URL\n        const uploadResponse = await fetch(url, {\n          method: \"PUT\",\n          body: file,\n          headers: {\n            'Content-Type': file.type\n          }\n        });\n        if (uploadResponse.ok) {\n          console.log('File uploaded successfully:', filename);\n        } else {\n          throw new Error('Upload failed');\n        }\n      }\n      setUploadStatus('Upload complete');\n      alert('Files uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setUploadStatus('Error occurred');\n      alert(\"Error occurred!!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"py-3 py-md-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card border border-light-subtle rounded-3 shadow-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body p-3 p-md-4 p-xl-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"fs-6 fw-normal text-center mb-4\",\n                  children: \"Select Files for Uploading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  onChange: handleFileChange,\n                  type: \"file\",\n                  id: \"formFileMultiple\",\n                  multiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-grid my-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-primary btn-lg text-black\",\n                      style: {\n                        backgroundColor: \"#e3f2fd\"\n                      },\n                      type: \"button\",\n                      onClick: uploadFile,\n                      children: \"Upload\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-center\",\n                    children: uploadStatus\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 38\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"kUIJ+4TnCdttwdFiUyo0JgJko/I=\", false, function () {\n  return [useLocation];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","FileUpload","userMail","_s","files","setFiles","uploadStatus","setUploadStatus","location","handleFileChange","e","Array","from","target","uploadFile","length","alert","file","response","fetch","method","headers","body","JSON","stringify","filename","name","contentType","type","data","json","url","uploadResponse","ok","console","log","Error","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","multiple","style","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction FileUpload({ userMail }) {\r\n  const [files, setFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const location = useLocation();\r\n\r\n  // Destructure the data from the location's state\r\n  \r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles(Array.from(e.target.files));\r\n  };\r\n\r\n  const uploadFile = async () => {\r\n    if (files.length === 0) {\r\n      alert(\"No files selected\");\r\n      return;\r\n    }\r\n    \r\n    setUploadStatus(`Uploading on ${userMail}...`);\r\n    \r\n    try {\r\n      for (const file of files) {\r\n        // Step 1: Get the presigned URL from the backend\r\n        const response = await fetch('http://localhost:5000/api/generate-url', {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ userMail: userMail, filename: file.name, contentType: file.type }), // Send filename and contentType\r\n        });\r\n  \r\n        const data = await response.json();\r\n        const { url, filename } = data;\r\n  \r\n        // Step 2: Upload the file directly to S3 using the presigned URL\r\n        const uploadResponse = await fetch(url, {\r\n          method: \"PUT\",\r\n          body: file,\r\n          headers: {\r\n            'Content-Type': file.type,\r\n          },\r\n        });\r\n  \r\n        if (uploadResponse.ok) {\r\n          console.log('File uploaded successfully:', filename);\r\n        } else {\r\n          throw new Error('Upload failed');\r\n        }\r\n      }\r\n      \r\n      setUploadStatus('Upload complete');\r\n      alert('Files uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading files:', error);\r\n      setUploadStatus('Error occurred');\r\n      alert(\"Error occurred!!\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <section className=\"py-3 py-md-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4\">\r\n              <div className=\"card border border-light-subtle rounded-3 shadow-sm\">\r\n                <div className=\"card-body p-3 p-md-4 p-xl-5\">\r\n                  <h2 className=\"fs-6 fw-normal text-center mb-4\">Select Files for Uploading</h2>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    onChange={handleFileChange}\r\n                    type=\"file\"\r\n                    id=\"formFileMultiple\"\r\n                    multiple\r\n                  />\r\n                  <div className=\"col-12\">\r\n                    <div className=\"d-grid my-3\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-lg text-black\"\r\n                        style={{ backgroundColor: \"#e3f2fd\" }}\r\n                        type=\"button\"\r\n                        onClick={uploadFile}\r\n                      >\r\n                        Upload\r\n                      </button>\r\n                    </div>\r\n                    {uploadStatus && <p className=\"text-center\">{uploadStatus}</p>}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}