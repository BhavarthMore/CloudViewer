{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\ListFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fileCategories = {\n  documents: 'Document',\n  images: 'Image',\n  videos: 'Video'\n};\nexport default function FileTypeDropdowns() {\n  _s();\n  const [selectedDocument, setSelectedDocument] = useState('');\n  const [selectedImage, setSelectedImage] = useState('');\n  const [selectedVideo, setSelectedVideo] = useState('');\n  const [files, setFiles] = useState([]);\n  const [allFiles, setAllFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all files when the component mounts\n  useEffect(() => {\n    const fetchFiles = async () => {\n      setLoading(true);\n      setError(null);\n      const email = localStorage.getItem('userEmail');\n      console.log('Fetching files for email:', email);\n      try {\n        const response = await fetch('http://localhost:5000/api/list-files', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setAllFiles(data.files);\n        } else {\n          setError('Failed to fetch files.');\n        }\n      } catch (err) {\n        setError('Error fetching files.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFiles();\n  }, []);\n\n  // Filter files based on selected categories\n  const filterFiles = type => {\n    return allFiles.filter(file => file.type === fileCategories[type]);\n  };\n  const handleFileSelect = setSelectedFile => event => {\n    setSelectedFile(event.target.value);\n    // Close the dropdown by setting the state to an empty string\n    event.target.value = '';\n  };\n  const renderFileOptions = (type, selectedFile, setSelectedFile) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedFile,\n      onChange: handleFileSelect(setSelectedFile),\n      className: \"form-select mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: [\"Select a \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), filterFiles(type).map((file, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.Key,\n        children: file.Key.split('/').pop()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterFiles(type).filter(file => file.Key === selectedFile).map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://your-bucket-name.s3.amazonaws.com/${file.Key}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.Key.split('/').pop()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" (\", file.Size, \" bytes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 mt-3\",\n      style: {\n        margin: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), renderFileOptions('documents', selectedDocument, setSelectedDocument), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), renderFileOptions('images', selectedImage, setSelectedImage), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), renderFileOptions('videos', selectedVideo, setSelectedVideo)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(FileTypeDropdowns, \"Yxk+Fd+WEi/yOhWxUvyDjWrUyRg=\");\n_c = FileTypeDropdowns;\nvar _c;\n$RefreshReg$(_c, \"FileTypeDropdowns\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fileCategories","documents","images","videos","FileTypeDropdowns","_s","selectedDocument","setSelectedDocument","selectedImage","setSelectedImage","selectedVideo","setSelectedVideo","files","setFiles","allFiles","setAllFiles","loading","setLoading","error","setError","fetchFiles","email","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","success","err","filterFiles","type","filter","file","handleFileSelect","setSelectedFile","event","target","value","renderFileOptions","selectedFile","children","onChange","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Key","split","pop","href","rel","Size","style","margin","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/ListFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst fileCategories = {\r\n  documents: 'Document',\r\n  images: 'Image',\r\n  videos: 'Video',\r\n};\r\n\r\nexport default function FileTypeDropdowns() {\r\n  const [selectedDocument, setSelectedDocument] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState('');\r\n  const [selectedVideo, setSelectedVideo] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [allFiles, setAllFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch all files when the component mounts\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const email = localStorage.getItem('userEmail');\r\n      console.log('Fetching files for email:', email);\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/list-files', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setAllFiles(data.files);\r\n        } else {\r\n          setError('Failed to fetch files.');\r\n        }\r\n      } catch (err) {\r\n        setError('Error fetching files.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  // Filter files based on selected categories\r\n  const filterFiles = (type) => {\r\n    return allFiles.filter(file => file.type === fileCategories[type]);\r\n  };\r\n\r\n  const handleFileSelect = (setSelectedFile) => (event) => {\r\n    setSelectedFile(event.target.value);\r\n    // Close the dropdown by setting the state to an empty string\r\n    event.target.value = '';\r\n  };\r\n\r\n  const renderFileOptions = (type, selectedFile, setSelectedFile) => (\r\n    <div>\r\n      <select\r\n        value={selectedFile}\r\n        onChange={handleFileSelect(setSelectedFile)}\r\n        className=\"form-select mb-3\"\r\n      >\r\n        <option value=\"\">Select a {type}</option>\r\n        {filterFiles(type).map((file, index) => (\r\n          <option key={index} value={file.Key}>{file.Key.split('/').pop()}</option>\r\n        ))}\r\n      </select>\r\n      {selectedFile && (\r\n        <ul>\r\n          {filterFiles(type).filter(file => file.Key === selectedFile).map((file, index) => (\r\n            <li key={index}>\r\n              <a href={`https://your-bucket-name.s3.amazonaws.com/${file.Key}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.Key.split('/').pop()}\r\n              </a>\r\n              <span> ({file.Size} bytes)</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3 mt-3\" style={{ margin: \"15px\" }}>\r\n        <h5>Documents</h5>\r\n        {renderFileOptions('documents', selectedDocument, setSelectedDocument)}\r\n\r\n        <h5>Images</h5>\r\n        {renderFileOptions('images', selectedImage, setSelectedImage)}\r\n\r\n        <h5>Videos</h5>\r\n        {renderFileOptions('videos', selectedVideo, setSelectedVideo)}\r\n      </div>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}