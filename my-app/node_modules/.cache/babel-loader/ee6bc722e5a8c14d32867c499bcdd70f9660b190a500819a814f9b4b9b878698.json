{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\ListFile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, use } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileList = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const location = useLocation();\n\n  // Destructure the data from the location's state\n  const userMail = location.state || {\n    userMail: \"\"\n  }; // Handle case if state is undefined  \n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await fetch('/list-files', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            prefix: `uploads/user-upload/${userMail}/` // Send the prefix in the request body\n          })\n        });\n        const data = await response.json();\n        setFiles(data);\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    };\n    fetchFiles();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", file.key, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Modified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \" \", new Date(file.lastModified).toLocaleString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 92\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", file.size, \" bytes\"]\n      }, file.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(FileList, \"DbzYZYSRcAEZbuuPgTROH/ZALds=\", true);\n_c = FileList;\nexport default FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","useEffect","useState","use","jsxDEV","_jsxDEV","FileList","_s","files","setFiles","uploadStatus","setUploadStatus","location","useLocation","userMail","state","fetchFiles","response","fetch","method","headers","body","JSON","stringify","prefix","data","json","error","console","children","map","file","fileName","_jsxFileName","lineNumber","columnNumber","key","Date","lastModified","toLocaleString","size","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/ListFile.js"],"sourcesContent":["import React, { useEffect, useState, use} from 'react';\r\n\r\nconst FileList = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const location = useLocation();\r\n\r\n  // Destructure the data from the location's state\r\n  const  userMail  = location.state || {userMail: \"\" }; // Handle case if state is undefined  \r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await fetch('/list-files', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            prefix: `uploads/user-upload/${userMail}/`, // Send the prefix in the request body\r\n          }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        setFiles(data);\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <ul>\r\n        {files.map((file) => (\r\n          <li key={file.key}>\r\n            <strong>File:</strong> {file.key} <br />\r\n            <strong>Last Modified:</strong> {new Date(file.lastModified).toLocaleString()} <br />\r\n            <strong>Size:</strong> {file.size} bytes\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMU,QAAQ,GAAGC,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAOC,QAAQ,GAAIF,QAAQ,CAACG,KAAK,IAAI;IAACD,QAAQ,EAAE;EAAG,CAAC,CAAC,CAAC;EACtDb,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;UAC1CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,MAAM,EAAE,uBAAuBV,QAAQ,GAAG,CAAE;UAC9C,CAAC;QACH,CAAC,CAAC;QAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCjB,QAAQ,CAACgB,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDX,UAAU,CAAC,CAAC;EACd,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAAwB,QAAA,eAEExB,OAAA;MAAAwB,QAAA,EACGrB,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACd1B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAQ;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACJ,IAAI,CAACK,GAAG,EAAC,GAAC,eAAA/B,OAAA;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxC9B,OAAA;UAAAwB,QAAA,EAAQ;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,IAAIE,IAAI,CAACN,IAAI,CAACO,YAAY,CAAC,CAACC,cAAc,CAAC,CAAC,EAAC,GAAC,eAAAlC,OAAA;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrF9B,OAAA;UAAAwB,QAAA,EAAQ;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACJ,IAAI,CAACS,IAAI,EAAC,QACpC;MAAA,GAJST,IAAI,CAACK,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA5CID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}