{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\DownloadFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from \"../components/Navbar\";\nimport Footer from '../components/Footer';\nimport Do from '../components/Footer';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fileCategories = {\n  documents: 'Document',\n  images: 'Image',\n  videos: 'Video'\n};\n\n// Utility function to format file size\nconst formatFileSize = bytes => {\n  if (bytes >= 1073741824) {\n    return (bytes / 1073741824).toFixed(2) + ' GB';\n  } else if (bytes >= 1048576) {\n    return (bytes / 1048576).toFixed(2) + ' MB';\n  } else if (bytes >= 1024) {\n    return (bytes / 1024).toFixed(2) + ' KB';\n  } else {\n    return bytes + ' bytes';\n  }\n};\nexport default function FileTypeDropdowns() {\n  _s();\n  const [selectedDocument, setSelectedDocument] = useState('');\n  const [selectedImage, setSelectedImage] = useState('');\n  const [selectedVideo, setSelectedVideo] = useState('');\n  const [allFiles, setAllFiles] = useState([]);\n  const [fileUrls, setFileUrls] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      setLoading(true);\n      setError(null);\n      const email = localStorage.getItem('userEmail');\n      console.log('Fetching files for email:', email);\n      try {\n        const response = await fetch('http://localhost:5000/api/list-files', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setAllFiles(data.files);\n        } else {\n          setError('Failed to fetch files.');\n        }\n      } catch (err) {\n        setError('Error fetching files.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFiles();\n  }, []);\n  const getSignedUrl = async (filename, contentType) => {\n    const email = localStorage.getItem('userEmail');\n    const file = filename.split('/').pop();\n    try {\n      const response = await fetch('http://localhost:5000/api/download-url', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userMail: email,\n          filename: file,\n          contentType: contentType\n        })\n      });\n      const data = await response.json();\n      if (data.url) {\n        return data.url;\n      } else {\n        throw new Error('Failed to get signed URL.');\n      }\n    } catch (err) {\n      console.error('Error fetching signed URL:', err);\n      return '';\n    }\n  };\n  const filterFiles = type => {\n    return allFiles.filter(file => file.type === fileCategories[type]);\n  };\n  const handleDownload = url => {\n    const a = document.createElement('a');\n    a.href = url;\n    a.target = '_blank'; // Open the file in a new tab\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  const handleFileSelect = (type, setSelectedFile) => async event => {\n    const selectedKey = event.target.value;\n    setSelectedFile(selectedKey);\n    const file = allFiles.find(file => file.Key === selectedKey);\n    if (file) {\n      const url = await getSignedUrl(file.Key, file.type);\n      if (url) {\n        setFileUrls(prevUrls => ({\n          ...prevUrls,\n          [file.Key]: url\n        }));\n      }\n    }\n  };\n  const renderFileOptions = (type, selectedFile, setSelectedFile) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedFile,\n      onChange: handleFileSelect(type, setSelectedFile),\n      className: \"form-select mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: [\"Select \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), filterFiles(type).map((file, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: file.Key,\n        children: file.Key.split('/').pop()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterFiles(type).filter(file => file.Key === selectedFile).map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: file.Key.split('/').pop()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" (\", formatFileSize(file.Size), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload(fileUrls[file.Key]),\n          className: \"btn btn-primary btn-sm ms-2\",\n          children: \"Open File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const display = searchParams.get(\"display\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      display: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 mt-3\",\n      style: {\n        margin: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-black\",\n        style: {\n          margin: \"15px\",\n          padding: \"10px\",\n          backgroundColor: \"#e3f2fd\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), renderFileOptions('documents', selectedDocument, setSelectedDocument)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-black\",\n        style: {\n          margin: \"15px\",\n          padding: \"10px\",\n          backgroundColor: \"#e3f2fd\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), renderFileOptions('images', selectedImage, setSelectedImage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-black\",\n        style: {\n          margin: \"15px\",\n          padding: \"10px\",\n          backgroundColor: \"#e3f2fd\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), renderFileOptions('videos', selectedVideo, setSelectedVideo)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(FileTypeDropdowns, \"wZZuNP0orbzAI3qzz9WBidmQsis=\", false, function () {\n  return [useLocation];\n});\n_c = FileTypeDropdowns;\nvar _c;\n$RefreshReg$(_c, \"FileTypeDropdowns\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","Do","useLocation","jsxDEV","_jsxDEV","fileCategories","documents","images","videos","formatFileSize","bytes","toFixed","FileTypeDropdowns","_s","selectedDocument","setSelectedDocument","selectedImage","setSelectedImage","selectedVideo","setSelectedVideo","allFiles","setAllFiles","fileUrls","setFileUrls","loading","setLoading","error","setError","fetchFiles","email","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","success","files","err","getSignedUrl","filename","contentType","file","split","pop","userMail","url","Error","filterFiles","type","filter","handleDownload","a","document","createElement","href","target","appendChild","click","removeChild","handleFileSelect","setSelectedFile","event","selectedKey","value","find","Key","prevUrls","renderFileOptions","selectedFile","children","onChange","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Size","onClick","location","searchParams","URLSearchParams","search","display","get","style","margin","padding","backgroundColor","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/DownloadFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from '../components/Footer';\r\nimport Do from '../components/Footer';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst fileCategories = {\r\n  documents: 'Document',\r\n  images: 'Image',\r\n  videos: 'Video',\r\n};\r\n\r\n// Utility function to format file size\r\nconst formatFileSize = (bytes) => {\r\n  if (bytes >= 1073741824) {\r\n    return (bytes / 1073741824).toFixed(2) + ' GB';\r\n  } else if (bytes >= 1048576) {\r\n    return (bytes / 1048576).toFixed(2) + ' MB';\r\n  } else if (bytes >= 1024) {\r\n    return (bytes / 1024).toFixed(2) + ' KB';\r\n  } else {\r\n    return bytes + ' bytes';\r\n  }\r\n};\r\n\r\nexport default function FileTypeDropdowns() {\r\n  const [selectedDocument, setSelectedDocument] = useState('');\r\n  const [selectedImage, setSelectedImage] = useState('');\r\n  const [selectedVideo, setSelectedVideo] = useState('');\r\n  const [allFiles, setAllFiles] = useState([]);\r\n  const [fileUrls, setFileUrls] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const email = localStorage.getItem('userEmail');\r\n      console.log('Fetching files for email:', email);\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/list-files', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setAllFiles(data.files);\r\n        } else {\r\n          setError('Failed to fetch files.');\r\n        }\r\n      } catch (err) {\r\n        setError('Error fetching files.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const getSignedUrl = async (filename, contentType) => {\r\n    const email = localStorage.getItem('userEmail');\r\n    const file = filename.split('/').pop();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/download-url', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userMail: email,\r\n          filename: file,\r\n          contentType: contentType,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        return data.url;\r\n      } else {\r\n        throw new Error('Failed to get signed URL.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching signed URL:', err);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const filterFiles = (type) => {\r\n    return allFiles.filter(file => file.type === fileCategories[type]);\r\n  };\r\n\r\n  const handleDownload = (url) => {\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.target = '_blank'; // Open the file in a new tab\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const handleFileSelect = (type, setSelectedFile) => async (event) => {\r\n    const selectedKey = event.target.value;\r\n    setSelectedFile(selectedKey);\r\n\r\n    const file = allFiles.find(file => file.Key === selectedKey);\r\n    if (file) {\r\n      const url = await getSignedUrl(file.Key, file.type);\r\n      if (url) {\r\n        setFileUrls(prevUrls => ({\r\n          ...prevUrls,\r\n          [file.Key]: url\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderFileOptions = (type, selectedFile, setSelectedFile) => (\r\n    <div>\r\n      <select\r\n        value={selectedFile}\r\n        onChange={handleFileSelect(type, setSelectedFile)}\r\n        className=\"form-select mb-3\"\r\n      >\r\n        <option value=\"\">Select {type}</option>\r\n        {filterFiles(type).map((file, index) => (\r\n          <option key={index} value={file.Key}>{file.Key.split('/').pop()}</option>\r\n        ))}\r\n      </select>\r\n      {selectedFile && (\r\n        <ul>\r\n          {filterFiles(type).filter(file => file.Key === selectedFile).map((file, index) => (\r\n            <li key={index} className=\"d-flex align-items-center\">\r\n              <span>{file.Key.split('/').pop()}</span>\r\n              <span> ({formatFileSize(file.Size)})</span> {/* File size formatted */}\r\n              <button\r\n                onClick={() => handleDownload(fileUrls[file.Key])}\r\n                className=\"btn btn-primary btn-sm ms-2\"\r\n              >\r\n                Open File\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const display = searchParams.get(\"display\");\r\n\r\n  return (\r\n    <div>\r\n      <Navbar display={display}/>\r\n      <div className=\"mb-3 mt-3\" style={{ margin: \"15px\" }}>\r\n        <div className='card text-black' style={{margin:\"15px\", padding:\"10px\", backgroundColor:\"#e3f2fd\"}}>\r\n          <h5>Documents</h5>\r\n          {renderFileOptions('documents', selectedDocument, setSelectedDocument)}\r\n        </div>\r\n\r\n        <div className='card text-black' style={{margin:\"15px\", padding:\"10px\", backgroundColor:\"#e3f2fd\"}}>\r\n          <h5>Images</h5>\r\n          {renderFileOptions('images', selectedImage, setSelectedImage)}\r\n        </div>\r\n\r\n        <div className='card text-black' style={{margin:\"15px\", padding:\"10px\", backgroundColor:\"#e3f2fd\"}}>\r\n          <h5>Videos</h5>\r\n          {renderFileOptions('videos', selectedVideo, setSelectedVideo)}\r\n        </div>\r\n      </div>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}