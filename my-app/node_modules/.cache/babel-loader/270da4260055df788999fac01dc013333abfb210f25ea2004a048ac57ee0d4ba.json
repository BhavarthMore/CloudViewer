{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const uploadFile = async () => {\n    if (!file) return;\n    try {\n      // Step 1: Get the presigned URL from the backend\n      const response = await fetch('http://localhost:5000/api/generate-url', {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      const {\n        url,\n        filename\n      } = data;\n\n      // Step 2: Upload the file directly to S3 using the presigned URL\n      const uploadResponse = await fetch(url, {\n        method: \"PUT\",\n        body: file,\n        headers: {\n          'Content-Type': file.type\n        }\n      });\n      if (uploadResponse.ok) {\n        console.log('File uploaded successfully:', filename);\n        alert(`File uploaded: ${filename}`);\n      } else {\n        throw new Error('Upload failed');\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert(\"Error occurred!!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: uploadImg,\n      alt: \"upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", selectedName || \"Click box to upload\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Maximun file size 10mb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n  // <div>\n  //   <h2>Upload File to S3</h2>\n  //   <input type=\"file\" onChange={handleFileChange} />\n  //   <button onClick={uploadFile}>Upload</button>\n  // </div>\n  ;\n}\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","handleFileChange","e","target","files","uploadFile","response","fetch","method","headers","data","json","url","filename","uploadResponse","body","type","ok","console","log","alert","Error","error","className","children","src","uploadImg","alt","fileName","_jsxFileName","lineNumber","columnNumber","selectedName","onChange","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction FileUpload() {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const uploadFile = async () => {\r\n    if (!file) return;\r\n\r\n    try {\r\n      // Step 1: Get the presigned URL from the backend\r\n      const response = await fetch('http://localhost:5000/api/generate-url', {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      \r\n      const data = await response.json();\r\n      const { url, filename } = data;\r\n\r\n      // Step 2: Upload the file directly to S3 using the presigned URL\r\n      const uploadResponse = await fetch(url, {\r\n        method: \"PUT\",\r\n        body: file,\r\n        headers: {\r\n          'Content-Type': file.type,\r\n        },\r\n      });\r\n\r\n      if (uploadResponse.ok) {\r\n        console.log('File uploaded successfully:', filename);\r\n        alert(`File uploaded: ${filename}`);\r\n      } else {\r\n        throw new Error('Upload failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert(\"Error occurred!!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload\">\r\n              <img src={uploadImg} alt=\"upload\" />\r\n              <h3> {selectedName || \"Click box to upload\"}</h3>\r\n              <p>Maximun file size 10mb</p>\r\n              <input type=\"file\" onChange={handleFileChange} />\r\n            </div>\r\n    // <div>\r\n    //   <h2>Upload File to S3</h2>\r\n    //   <input type=\"file\" onChange={handleFileChange} />\r\n    //   <button onClick={uploadFile}>Upload</button>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACN,IAAI,EAAE;IAEX,IAAI;MACF;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC,GAAG;QAAEC;MAAS,CAAC,GAAGH,IAAI;;MAE9B;MACA,MAAMI,cAAc,GAAG,MAAMP,KAAK,CAACK,GAAG,EAAE;QACtCJ,MAAM,EAAE,KAAK;QACbO,IAAI,EAAEhB,IAAI;QACVU,OAAO,EAAE;UACP,cAAc,EAAEV,IAAI,CAACiB;QACvB;MACF,CAAC,CAAC;MAEF,IAAIF,cAAc,CAACG,EAAE,EAAE;QACrBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEN,QAAQ,CAAC;QACpDO,KAAK,CAAC,kBAAkBP,QAAQ,EAAE,CAAC;MACrC,CAAC,MAAM;QACL,MAAM,IAAIQ,KAAK,CAAC,eAAe,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CF,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF,CAAC;EAED,oBACExB,OAAA;IAAK2B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAClB5B,OAAA;MAAK6B,GAAG,EAAEC,SAAU;MAACC,GAAG,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCnC,OAAA;MAAA4B,QAAA,GAAI,GAAC,EAACQ,YAAY,IAAI,qBAAqB;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjDnC,OAAA;MAAA4B,QAAA,EAAG;IAAsB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7BnC,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACiB,QAAQ,EAAEhC;IAAiB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C;EACb;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACjC,EAAA,CAxDQD,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AA0DnB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}