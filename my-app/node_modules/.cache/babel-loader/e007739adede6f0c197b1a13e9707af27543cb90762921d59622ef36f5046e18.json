{"ast":null,"code":"var _jsxFileName = \"E:\\\\file sharing website\\\\my-app\\\\src\\\\screens\\\\ListFile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom'; // Ensure this import is present\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileList = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  // Destructure userMail from location state\n  const {\n    userMail\n  } = location.state || {\n    userMail: \"\"\n  }; // Default to an empty string if undefined\n\n  useEffect(() => {\n    const fetchFiles = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch('/list-files', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            prefix: `uploads/user-upload/${userMail}/` // Send the prefix in the request body\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setFiles(data);\n      } catch (error) {\n        console.error('Error fetching files:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Only fetch files if userMail is present\n    if (userMail) {\n      fetchFiles();\n    }\n  }, [userMail]); // Dependency array includes userMail to rerun the effect when it changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Files for \", userMail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading files...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), !loading && !error && files.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No files found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \" \", file.key, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Modified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \" \", new Date(file.lastModified).toLocaleString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 92\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \" \", file.size, \" bytes\"]\n      }, file.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FileList, \"hmRD1H70QDZ5uAJxK5H8RpjiSA0=\", false, function () {\n  return [useLocation];\n});\n_c = FileList;\nexport default FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","FileList","_s","files","setFiles","loading","setLoading","error","setError","location","userMail","state","fetchFiles","response","fetch","method","headers","body","JSON","stringify","prefix","ok","Error","data","json","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","file","key","Date","lastModified","toLocaleString","size","_c","$RefreshReg$"],"sources":["E:/file sharing website/my-app/src/screens/ListFile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'; // Ensure this import is present\r\n\r\nconst FileList = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const location = useLocation();\r\n\r\n  // Destructure userMail from location state\r\n  const { userMail } = location.state || { userMail: \"\" }; // Default to an empty string if undefined\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch('/list-files', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            prefix: `uploads/user-upload/${userMail}/`, // Send the prefix in the request body\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setFiles(data);\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Only fetch files if userMail is present\r\n    if (userMail) {\r\n      fetchFiles();\r\n    }\r\n  }, [userMail]); // Dependency array includes userMail to rerun the effect when it changes\r\n\r\n  return (\r\n    <div className='text-white'>\r\n      <h2>Files for {userMail}</h2>\r\n      {loading && <p>Loading files...</p>}\r\n      {error && <p>Error: {error}</p>}\r\n      {!loading && !error && files.length === 0 && <p>No files found.</p>}\r\n      <ul>\r\n        {files.map((file) => (\r\n          <li key={file.key}>\r\n            <strong>File:</strong> {file.key} <br />\r\n            <strong>Last Modified:</strong> {new Date(file.lastModified).toLocaleString()} <br />\r\n            <strong>Size:</strong> {file.size} bytes\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}